METHOD RK4

STARTTIME = 0
STOPTIME=10
DT = 0.02

METHOD RK4

;; N.B. Make sure you have the correct initial conditions for the type of phenomena you're look at (see below). 

STARTTIME = 0
STOPTIME=300
DT = 0.02

{Parameters}
beta = 0.5  ; contact rate
nu = 0.3    ; recovery 
N = 10000      ; total population. 
Inf0 = 10      ; initial number of infecteds
nsim = 10   ; number of simulations. 
mu = 0.00033     ; Death rate  			;; SIR: new parameter for SIR model - death rate. 

R0 = beta/( nu + mu )
q = N*mu*(beta - nu - mu)/(beta*(mu + nu)) ;; SIR: new definition of number of infecteds at endemic equilibrium state

;;Inf0 = INT(q)  ;; INITIAL CONDITION FOR THE ENDEMIC SITUATION.
;;Susc0 = INT( N/R0 )  		;; SIR: new definition of number of susceptibles at endemic equilibrium state
Inf0 = 1 ;; INITIAL CONDITION  FOR THE EPIDEMIC SITUATION. 
Susc0 = N - 1 ;; INITIAL CONDITION  FOR THE EPIDEMIC SITUATION. 
;;Susc0 = 0.5*N  ;; change the initial fraction susceptible. 


{THE MODEL}
{variables}
init  Infected[1..nsim] = Inf0 
init Susceptible[1..nsim] = Susc0   		;; SIR: initial value for susceptibles. 

Recovered[1..nsim] = N-Infected[i] - Susceptible[i]  ;;  SIR: rest of population is recovered. 
FOI[1..nsim] = beta*infected[i]/N

{Calculate events}
suscEvents[1..nsim] = binomial((FOI[i] + mu)*dt, Susceptible[i])		;; SIR: two types of events for S, so competing hazards. 
suscDeathEvents[1..nsim] = binomial(mu/(FOI[i] + mu), suscEvents[i]) 		;; SIR: a fraction of S events are deaths. 
infectionEvents[1..nsim] = suscEvents[i] - suscDeathEvents[i]			;; SIR: ...the rest are infections. 
infectedEvents[1..nsim] = binomial((nu+mu)*dt, Infected[i])			;; SIR: two types of events for I, so competing hazards.
infDeathEvents[1..nsim] = binomial(mu/(mu + nu), infectedEvents[i]) 		;;  SIR: a fraction of I events are deaths.
recoveryEvents[1..nsim] = infectedEvents[i] - infDeathEvents[i]		;; SIR: ...the rest are recoveries. 
recoveredDeathEvents[1..nsim] = binomial(mu*dt, N - Infected[i] - Susceptible[i])
birthEvents[1..nsim] = suscDeathEvents[i] + infDeathEvents[i] + recoveredDeathEvents[i]

{Calculate state next time step}
next Susceptible[1..nsim] = Susceptible[i] - suscDeathEvents[i] - infectionEvents[i] + birthEvents[i]
next Infected[1..nsim] = Infected[i] + infectionEvents[i] - recoveryEvents[i] - infDeathEvents[i]


{STATISTICS FROM THE MODEL}
meanInf = ARRAYMEAN(Infected[*])
meanSusc = ARRAYMEAN(Susceptible[*])
meanRecov = N - meanInf - meanSusc

init fade_out[1..nsim] = 0
next fade_out[1..nsim] = IF(infected[i]<0.5) Then 1 else 0
meanFadeout = ARRAYMEAN(fade_out[*])*100

{Outbreak size}
init outSize[1..nsim] = Inf0 
next outSize[1..nsim] = outSize[i] + infectionEvents[i]
;fracOutSize[1..nsim] = outSize[i]/N